name: Build
on: [ push, pull_request ]
permissions:
  attestations: write
  contents: read
  id-token: write

jobs:
  build:
    strategy:
      matrix:
        platform:
          - host: macos-latest
            os_name: mac
            file_name: doom-status

          - host: ubuntu-latest
            os_name: linux
            file_name: doom-status

          - host: windows-latest
            os_name: windows
            file_name: doom-status.exe
    runs-on: ${{ matrix.platform.host }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c95a14d0e5bab51a9f56296a4eb0e416910cd350 # v2.10.3
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            archive.ubuntu.com:80
            azure.archive.ubuntu.com:80
            api.github.com:443
            crates.io:443
            esm.ubuntu.com:443
            fulcio.sigstore.dev:443
            github.com:443
            index.crates.io:443
            motd.ubuntu.com:443
            ppa.launchpadcontent.net:443
            rekor.sigstore.dev:443
            security.ubuntu.com:80
            static.crates.io:443
            static.rust-lang.org:443

      - name: Install Dependencies (Linux)
        run: sudo apt-get install -y libgtk-3-dev libglib2.0-dev build-essential
        if: matrix.platform.host == 'ubuntu-latest'

      - name: Install extra tools (Windows)
        uses: ChristopheLav/windows-sdk-install@88d72875fb873886ea398ed04041446da6f26f86 # v1.0.3
        with:
          version-sdk: 22621
          features: 'OptionId.DesktopCPPx64,OptionId.DesktopCPParm64'
        if: matrix.platform.host == 'windows-latest'

      - run: rustup target install aarch64-pc-windows-msvc
        if: matrix.platform.host == 'windows-latest'

      - run: rustup target install x86_64-apple-darwin
        if: matrix.platform.host == 'macos-latest'

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Rust toolchain
        run: rustup show && rustup update

      - name: Build
        run: cargo build --release

      - name: Build Windows arm64
        run: cargo build --release --target=aarch64-pc-windows-msvc
        if: matrix.platform.host == 'windows-latest'

      - name: Build Mac x86_64
        run: |
          cargo build --release --target=x86_64-apple-darwin
          lipo -create -output doom-status-universal target/release/doom-status target/x86_64-apple-darwin/release/doom-status
          cp doom-status-universal target/release/${{ matrix.platform.file_name }}
          mkdir Doom\ Status.app
          mkdir Doom\ Status.app/Contents
          mkdir Doom\ Status.app/Contents/MacOS
          mkdir Doom\ Status.app/Contents/Resources
          mv doom-status-universal Doom\ Status.app/Contents/MacOS/doom-status
          cp macos/AppIcon.icns Doom\ Status.app/Contents/Resources/
          cp macos/Info.plist Doom\ Status.app/Contents/
          cp macos/PkgInfo Doom\ Status.app/Contents/
          mkdir -p private_keys/
          echo -n "${{ secrets.CERTIFICATE_P12 }}" | base64 --decode -o private_keys/cert.p12
        if: matrix.platform.host == 'macos-latest'
        # echo '${{ secrets.API_KEY_JSON }}' > private_keys/AuthKey_${{ secrets.API_KEY_ID }}.json

      - name: Sign Mac binary
        uses: indygreg/apple-code-sign-action@44d0985b7f4363198e80b6fea63ac3e9dd3e9957 # v1.1
        with:
          input_path: 'Doom Status.app'
          #notarize: true
          #staple: true
          p12_file: private_keys/cert.p12
          p12_password: ${{ secrets.CERTIFICATE_PASSWORD }}
          #app_store_connect_api_key_json_file: private_keys/AuthKey_${{ secrets.API_KEY_ID }}.json
          sign_args: |
            --for-notarization
          rcodesign_version: '0.29.0'
        if: matrix.platform.host == 'macos-latest'

      - name: Compress Mac app & cleanup
        run: |
          zip -r Doom\ Status.zip Doom\ Status.app
          rm -rf private_keys/
        if: matrix.platform.host == 'macos-latest'

      #- uses: actions/attest-build-provenance@7668571508540a607bdfd90a87a560489fe372eb # v2.1.0
      #  with:
      #    subject-path: target/release/${{ matrix.platform.file_name }}

      #- uses: actions/attest-build-provenance@7668571508540a607bdfd90a87a560489fe372eb # v2.1.0
      #  with:
      #    subject-path: target/aarch64-pc-windows-msvc/release/${{ matrix.platform.file_name }}
      #  if: matrix.platform.host == 'windows-latest'

      #- uses: actions/attest-build-provenance@7668571508540a607bdfd90a87a560489fe372eb # v2.1.0
      #  with:
      #    subject-path: Doom\ Status.app/Contents/MacOS/doom-status
      #  if: matrix.platform.host == 'macos-latest'

      - name: Upload ${{ matrix.platform.os_name }}
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: doom-status_${{ matrix.platform.os_name }}
          path: target/release/${{ matrix.platform.file_name }}
          compression-level: 0
          if-no-files-found: error
          retention-days: 5

      - name: Upload Windows Arm64
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: doom-status_${{ matrix.platform.os_name }}-arm64
          path: target/aarch64-pc-windows-msvc/release/${{ matrix.platform.file_name }}
          compression-level: 0
          if-no-files-found: error
          retention-days: 5
        if: matrix.platform.host == 'windows-latest'

      - name: Upload Mac OS binary
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: 'Doom Status.zip'
          path: 'Doom Status.zip'
          compression-level: 0
          if-no-files-found: error
          retention-days: 5
        if: matrix.platform.host == 'macos-latest'